#!/bin/bash
clear
source ShellBot.sh
touch lista

[[ ! -e RESET ]] && touch RESET
api_bot=$1
ShellBot.init --token "$api_bot" --monitor --flush
ShellBot.username

# - Funcao menu
menu() {
    local msg
        msg="=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n"
        msg+="<b>‚Ä¢üîπ‚Ä¢ Bot GutaSSH ‚Ä¢üîπ‚Ä¢</b>\n"
        msg+="=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=√ó=\n\n"
        msg+="Opa, bem vindo ao meu bot oficial, para criar seu usu√°rio basta clicar no bot√£o abaixo;"
	ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard1" \
        --parse_mode html
        return 0
}

# - funcao criar ssh
criarteste() {
    [[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "üßê Vixi... Eu acho que voc√™ j√° criou um usu√°rio antes... Caso queira um novo aguarde at√© que o antigo expire... Bom uso. üëäüèΩ"
      return 0
    }
    usuario=$(echo user$(( RANDOM% + 99999 )))
    senha=$((RANDOM% + 99999))
    limite='1 Pessoa'
    tempo='15 Dias'
    tuserdate=$(date '+%C%y/%m/%d' -d " +15 day")
    useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/VPSManager/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/VPSManager/senha/$usuario > /dev/null 2>&1
rm -rf /etc/VPSManager/userteste/$usuario.sh" > /etc/VPSManager/userteste/$usuario.sh
    chmod +x /etc/VPSManager/userteste/$usuario.sh
    at -f /etc/VPSManager/userteste/$usuario.sh now + $tempo day > /dev/null 2>&1
    echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚úÖ <b>Seu Usuario est√° ativo!</b> ‚úÖ\n\nServidor: GutaSSH üáßüá∑\n‚û°Ô∏è Seu Usu√°rio: <code>$usuario</code>\n‚û°Ô∏è Sua senha: <code>$senha</code>\n\n‚è≥ Expira em: $tempo Dias")" \
    --parse_mode html
    return 0
}

#informacoes usuario
infouser () {
	ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
	--text "$(echo -e "Nome:  ${message_from_first_name[$(ShellBot.ListUpdates)]}\nUser: @${message_from_username[$(ShellBot.ListUpdates)]:-null}")\nID: ${message_from_id[$(ShellBot.ListUpdates)]} " \
	--parse_mode html
	return 0
}

#informacoes usuario
pix () {
	 ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
	--text "$(echo -e "<b>Conta SSH R$ 10/M√™s \n\nCOPIE A CHAVE PIX </b>\n <code>canalminerdso@gmail.com</code>")" \
	--parse_mode html
	return 0
}

unset botao1
botao1=''
ShellBot.InlineKeyboardButton --button 'botao1' --line 1 --text 'CRIAR SEU TESTE' --callback_data 'gerarssh'
ShellBot.regHandleFunction --function criarteste --callback_data gerarssh


unset keyboard1
keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'botao1')"
while :; do
   [[ "$(date +%d +5days)" != "$(cat RESET)" ]] && {
   	echo $(date +%d +5days) > RESET
   	echo ' ' > lista
   }
  ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
  for id in $(ShellBot.ListUpdates); do
    (
      ShellBot.watchHandle --callback_data ${callback_query_data[$id]}
      comando=(${message_text[$id]})
      [[ "${comando[0]}" = "/gerarteste"  || "${comando[0]}" = "/teste" ]] && menu
      [[ "${comando[0]}" = "/id"  ]] && infouser
    ) &
  done
done
